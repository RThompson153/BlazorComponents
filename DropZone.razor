<div class="dropZone @Class" style="height: inherit" @ondragover:preventDefault @ondrop:preventDefault @ondrop:stopPropagation @ondragover="dragOver" @ondrop="onDrop">
	@if (_items != null && _items.Any())
	{
		@foreach (var item in _items)
		{
			<div class="col-6">
				<DropItem />
			</div>
		}
	}
</div>

@code{
	[Parameter]
	public string Class { get; set; }
	[Parameter]
	public IEnumerable<DraggableItem> Items { get; set; }
	[Parameter]
	public EventCallback<DraggableItem?> DragOver { get; set; }
	[Parameter]
	public EventCallback<DraggableItem?> DragLeave { get; set; }
	[Parameter]
	public EventCallback<DraggableItem> Drop { get; set; }
	[Parameter]
	public EventCallback DropItem { get; set; }

	private IEnumerable<DraggableItem> _items;

	protected override async Task OnInitializedAsync()
	{
		_items = Items;

		await base.OnInitializedAsync();
	}

	private void dragOver()
	{
		DragOver.InvokeAsync();
	}

	private void dragLeave()
	{
		DragLeave.InvokeAsync();
	}

	private void onDrop()
	{
		Drop.InvokeAsync();
	}
}