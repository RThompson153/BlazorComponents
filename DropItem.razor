@if (Item != null)
{
	<div class="draggable-item @_class" draggable="true" @ondrop:preventDefault @ondrop:stopPropagation @ondragover:preventDefault @ondragstart="onDragStart" @ondrop="onDrop" @ondragover="dragOver" @ondragleave="dragLeave">
		<div class="top" @ondrop:preventDefault @ondrop:stopPropagation @ondragover:preventDefault style="min-height: 2rem;"></div>

		<h3>@Item.Title</h3>

		@*<div class="bottom" @ondrop:preventDefault @ondrop:stopPropagation style="min-height: 2rem;"></div>*@
	</div>
}

@code {
	[Parameter]
	public DraggableItem Item { get; set; }
	[Parameter]
	public EventCallback<DraggableItem> OnDrag { get; set; }
	[Parameter]
	public EventCallback<DraggableItem> OnDrop { get; set; }

	private string _class;

	private void onDragStart()
	{
		Service.SetCurrentItem(Item);

		var meh = Service.CurrentItem;

		Console.WriteLine($"Picked up {Item.Title}");
	}

	private void dragOver()
	{
		_class = "bg-warning";
	}

	private void dragLeave()
	{
		_class = "";
	}

	private void onDrop()
	{
		Console.WriteLine($"Dropping {Service.CurrentItem.Title} on {Item.Title}");
	}
}
